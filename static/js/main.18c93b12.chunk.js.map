{"version":3,"sources":["components/UI/Card.js","components/ExpensesFilter/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","e","filterChangeHandler","target","value","selectedYear","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","filteredItems","length","map","item","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","valueArrays","dataPoints","data","totalMax","max","console","log","dataPoint","ExpensesChart","chartDataPoint","expenses","expense","getMonth","Expenses","useState","setSelectedYear","items","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredPrice","setEnteredPrice","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Number","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","stopEditingHandler","newExpenseObject","random","addExpenseData","DUMMY_EXPENSES","App","setExpenses","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18c93b12.chunk.js","sourcesContent":["import \"./Card.css\";\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const onYearChange = (e) => {\r\n    props.filterChangeHandler(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select onChange={onYearChange} value={props.selectedYear}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const date = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{date}</div>\r\n      <div className=\"expense-date__yeary\">{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nconst ExpensesList = (props) => {\r\n  if (props.filteredItems.length === 0)\r\n    return <h2 className=\"expenses-list__fallback\">No expense found.</h2>;\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.filteredItems.map((item) => {\r\n        return (\r\n          <ExpenseItem\r\n            key={item.id}\r\n            title={item.title}\r\n            amount={item.amount}\r\n            date={item.date}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0)\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const valueArrays = props.dataPoints.map((data) => data.value);\r\n  const totalMax = Math.max(...valueArrays);\r\n  console.log(props.dataPoints);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoint = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoint[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoint} />;\r\n};\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [selectedYear, setSelectedYear] = useState(\"2020\");\r\n\r\n  const onFilterChangeHandler = (selectedYear) => {\r\n    setSelectedYear(selectedYear);\r\n  };\r\n\r\n  const filteredItems = props.items.filter((item) => {\r\n    if (item.date.getFullYear().toString() === selectedYear) return true;\r\n    return false;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selectedYear={selectedYear}\r\n        filterChangeHandler={onFilterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredItems} />\r\n      <ExpensesList filteredItems={filteredItems} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nfunction ExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredPrice, setEnteredPrice] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enterPrice: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n\r\n    //Not good approach if we update current state using previous state\r\n    //setUserInput({ ...userInput, enteredTitle: e.target.value });\r\n\r\n    //Best way to use if we update current state using previous state\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: e.target.value };\r\n    // });\r\n  };\r\n\r\n  const priceChangeHandler = (e) => {\r\n    setEnteredPrice(e.target.value);\r\n\r\n    //Not good approach if we update current state using previous state\r\n    //setUserInput({ ...userInput, enterPrice: e.target.value });\r\n\r\n    //Best way to use if we update current state using previous state\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: e.target.value };\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n\r\n    //Not good approach if we update current state using previous state\r\n    //setUserInput({ ...userInput, enteredDate: e.target.value });\r\n\r\n    //Best way to use if we update current state using previous state\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: e.target.value };\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: Number(enteredPrice),\r\n      date: new Date(enteredDate),\r\n    };\r\n    //sending data to parent element\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    //clearing form\r\n    setEnteredTitle(\"\");\r\n    setEnteredPrice(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={titleChangeHandler}\r\n            value={enteredTitle}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Price</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={priceChangeHandler}\r\n            value={enteredPrice}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n            value={enteredDate}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const onSaveExpenseDataHandler = (newExpenseObject) => {\r\n    const expenseData = { ...newExpenseObject, id: Math.random() };\r\n    props.addExpenseData(expenseData);\r\n    stopEditingHandler();\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add new expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={onSaveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (newExpenseObject) => {\n    setExpenses((prevState) => {\n      return [newExpenseObject, ...prevState];\n    });\n  };\n  return (\n    <div>\n      <NewExpense addExpenseData={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}